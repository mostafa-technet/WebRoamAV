<Window x:Class="WebRoamAV.EDDevices"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:p="clr-namespace:WebRoamAV.Resources"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WebRoamAV"
        mc:Ignorable="d"
        WindowStyle="None" Topmost="False" WindowState="Normal"         
         Background="White" Title="MainWindow" ResizeMode="CanMinimize"  Height="558" Width="696" WindowStartupLocation="Manual" Loaded="Window_Loaded" Keyboard.KeyDown="ButtonEsc_Click">

    <Window.Resources>
        <ResourceDictionary
  xmlns:local="clr-namespace:WebRoamAV">
            <!--<span class="code-comment"> Import the resource dictionary which contains the Style
       applied to Border of each horse's "pit". -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Dictionary1.xaml"/>
                <ResourceDictionary Source="scrollviewerDic.xaml"/>
                <ResourceDictionary Source="togglbuttonDic.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="17*"/>
            <RowDefinition Height="541*"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal"  Grid.Column="2" Grid.Row="0" HorizontalAlignment="Right" Margin="0,10,85,525" Grid.RowSpan="2">

            <TextBlock>
                       
                <Hyperlink Foreground="Green" x:Name="link1"  NavigateUri="frmSettings.xaml" RequestNavigate="link_RequestNavigate">
                    <Hyperlink.Style>
      <Style TargetType="{x:Type Hyperlink}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />       
          <Setter Property="KeyboardNavigation.TabIndex" Value="0" />    
       </Style>
</Hyperlink.Style>
                <Run Text="Settings"/>
            </Hyperlink>
            </TextBlock>
            <Label Width="10"/>
            <TextBlock><Hyperlink  Foreground="Green" x:Name="link2" NavigateUri="wndTools.xaml"  RequestNavigate="link_RequestNavigate">
                <Hyperlink.Style>
      <Style TargetType="{x:Type Hyperlink}">
             <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />       
          <Setter Property="KeyboardNavigation.TabIndex" Value="1" />   
       </Style>
</Hyperlink.Style>

                <Run Text="Tools"/></Hyperlink></TextBlock>
            <Label Width="10"/>
            <TextBlock><Hyperlink  Foreground="Green" x:Name="link3" NavigateUri="wpfReports.xaml"  RequestNavigate="link_RequestNavigate">
                <Hyperlink.Style>
      <Style TargetType="{x:Type Hyperlink}">
             <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />       
          <Setter Property="KeyboardNavigation.TabIndex" Value="2" />   
       </Style>
</Hyperlink.Style>

                <Run Text="Report"/></Hyperlink></TextBlock>
            <Label Width="10"/>
            <TextBlock x:Name="tlink4"><Hyperlink  Foreground="Green" x:Name="link4" Click="link4_Click"><Hyperlink.Resources>
                        <ContextMenu x:Key="link41" StaysOpen="true">
                            <MenuItem Header="Help" Click="MenuItem_Click"/>
                            <MenuItem Header="Submit System Information"  Click="MenuItem_Click" />
                            <MenuItem Header="Support"  Click="MenuItem_Click" />
                            <MenuItem Header="About" Click="MenuItem_Click"/>
                        </ContextMenu>
                    </Hyperlink.Resources>
                <Hyperlink.Style>
      <Style TargetType="{x:Type Hyperlink}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />       
          <Setter Property="KeyboardNavigation.TabIndex" Value="3" />
       </Style>
</Hyperlink.Style>

                <Run Text="Help"/></Hyperlink></TextBlock>
        </StackPanel>
        <ScrollViewer VerticalScrollBarVisibility="Auto"  Margin="0,173,23,51" Grid.Column="2" Grid.Row="1" PreviewMouseMove="ScrollViewer_PreviewMouseMove" MouseLeave="ScrollViewer_MouseLeave">
            <StackPanel  Margin="0,0,0,0"  Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="2">

                <Canvas Width="Auto" Height="79">
                    <Canvas.Style>
                        <Style>
                            <Setter Property="Canvas.Background" Value="#E7F3E8"/>
                            <Style.Triggers>
                                <Trigger Property="Canvas.IsMouseOver" Value="True">
                                    <Setter Property="Canvas.Background" Value="#A5D2F1D5" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Canvas.Style>
                    <TextBlock Text="Autorun Protection" Margin="10,10,0,0" FontSize="23" FontWeight="SemiBold"/>
                    <TextBlock Text="Disables autorun of external drives like USB drives, CD/DVD etc." Margin="10,45,0,0" FontSize="14"/>
                    <TextBlock x:Name="fText" Text="OFF" Margin="460,30,0,0" FontSize="15" FontStyle="Normal"/>
                    <ToggleButton  IsTabStop="True" TabIndex="7" Focusable="True" PreviewKeyDown="fOnOff_KeyDown" x:Name="fOnOff" Margin="510,30,0,0" Style="{StaticResource AnimatedSwitch}" Checked="fOnOff_Checked" Unchecked="fOnOff_Unchecked"/>
                </Canvas>
                <Line Fill="White" Width="Auto" Height="3"/>
                <Canvas  KeyboardNavigation.IsTabStop="True" Focusable="True" KeyboardNavigation.TabIndex="8" PreviewKeyDown="Canvas_KeyDown" Width="Auto"  Height="79" Cursor="Hand" PreviewMouseUp="Canvas_PreviewMouseUp">
                    <TextBlock Text="Scan External Drives" Margin="10,10,0,0" FontSize="23" FontWeight="SemiBold"/>
                    <TextBlock Text="Scan external drives like USB drive as soon as they are connected" Margin="10,45,0,0" FontSize="14"/>
                    <ToggleButton  IsTabStop="True" TabIndex="9" Focusable="True" PreviewKeyDown="SSOnOff_KeyDown" x:Name="SSOnOff" Margin="510,30,0,0" Style="{StaticResource AnimatedSwitch}" Checked="SSOnOff_Checked" Unchecked="SSOnOff_Unchecked"/>
                    <TextBlock x:Name="SSText" Text="OFF" Margin="460,30,0,0" FontSize="15" FontStyle="Normal"/>
                    <Canvas.Style>
                        <Style>
                            <Setter Property="Canvas.Background" Value="#E7F3E8"/>
                            <Style.Triggers>
                                <Trigger Property="Canvas.IsMouseOver" Value="True">
                                    <Setter Property="Canvas.Background" Value="#A5D2F1D5" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Canvas.Style>
                </Canvas>
                <Line Fill="White" Width="Auto" Height="3"/>
                <Canvas  KeyboardNavigation.IsTabStop="True" Focusable="True" KeyboardNavigation.TabIndex="10" PreviewKeyDown="Canvas_KeyDown_1" Width="Auto"  Height="79" Cursor="Hand" PreviewMouseUp="Canvas_PreviewMouseUp_1">
                    <TextBlock Text="Data Theft Protection" Margin="10,10,0,0" FontSize="23" FontWeight="SemiBold"/>
                    <TextBlock Text="Blocks access to external drives like USB drives, CD/DVD etc." Margin="10,45,0,0" FontSize="14"/>
                    <ToggleButton  IsTabStop="True" TabIndex="11" Focusable="True" PreviewKeyDown="TTOnOff_KeyDown" x:Name="TTOnOff" Margin="510,30,0,0" Style="{StaticResource AnimatedSwitch}" Checked="TTOnOff_Checked" Unchecked="TTOnOff_Unchecked" Cursor="Hand"/>
                    <TextBlock x:Name="TTText" Text="OFF" Margin="460,30,0,0" FontSize="15" FontStyle="Normal"/>
                    <Canvas.Style>
                        <Style>
                            <Setter Property="Canvas.Background" Value="#E7F3E8"/>
                            <Style.Triggers>
                                <Trigger Property="Canvas.IsMouseOver" Value="True">
                                    <Setter Property="Canvas.Background" Value="#A5D2F1D5" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Canvas.Style>
                </Canvas>
                <Line Fill="White" Width="Auto" Height="3"/>
                <Canvas Width="Auto"  Height="79" Visibility="Collapsed">
                    <TextBlock Text="Scan Windows Mobile" Margin="10,10,0,0" FontSize="23" FontWeight="SemiBold"/>
                    <TextBlock Text="Scan Windows Mobile automatically when they are connected" Margin="10,45,0,0" FontSize="14"/>
                    <TextBlock x:Name="sText" Text="OFF" Margin="460,30,0,0" FontSize="15" FontStyle="Normal"/>
                    <ToggleButton x:Name="sOnOff" Margin="510,30,0,0" Style="{StaticResource AnimatedSwitch}" Checked="sOnOff_Checked" Unchecked="sOnOff_Unchecked" Cursor="Hand"/>

                    <Canvas.Style>
                        <Style>
                            <Setter Property="Canvas.Background" Value="#E7F3E8"/>
                            <Style.Triggers>
                                <Trigger Property="Canvas.IsMouseOver" Value="True">
                                    <Setter Property="Canvas.Background" Value="#A5D2F1D5" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Canvas.Style>
                </Canvas>
                <Line Fill="White" Width="Auto" Height="3"/>
            </StackPanel>
        </ScrollViewer>
        <Rectangle Name="rect2" Height="20" Width="Auto" Fill="#328A3E"  Grid.ColumnSpan="3" VerticalAlignment="Bottom" Grid.Row="1"/>
        <Rectangle Name="rect3" Fill="#328A3E" Margin="0,59,0,395"  Grid.ColumnSpan="3" Grid.Row="1"/>
        <Button x:Name="buttonMin" Content="-" IsTabStop="True" TabIndex="4" Focusable="True" PreviewKeyDown="buttonMin_KeyDown" Grid.Column="2" VerticalContentAlignment="Center" Margin="587,0,42,525" Style="{StaticResource buttonMin}" Click="buttonMin_Click" Grid.RowSpan="2"/>
        <Button x:Name="buttonClose" IsTabStop="True" TabIndex="5" Focusable="True" PreviewKeyDown="buttonClose_KeyDown"  Content="X" Grid.Column="2" VerticalContentAlignment="Center" Margin="625,0,4,525" Style="{StaticResource buttonMin}" Click="buttonClose_Click" Grid.RowSpan="2"/>
        <Button x:Name="ButtonMn" Content="&lt;&lt;   Back to Menu" Grid.Column="4" HorizontalAlignment="Left" Margin="487,87,0,0" Grid.Row="1" VerticalAlignment="Top" Width="151" Height="32" Foreground="#FF008000" FontFamily="Eras Demi ITC" FontSize="15" Cursor="Hand" IsTabStop="True" TabIndex="6" Focusable="True" PreviewKeyDown="ButtonMn_KeyDown"  PreviewMouseLeftButtonUp="Button_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#eaf5f5f5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#ebe5e5e5" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>


        <Rectangle Name="rectMain" Margin="0,0,0,0" StrokeThickness="1" Stroke="#328A3E"  Grid.ColumnSpan="3" Grid.RowSpan="2">
        </Rectangle>
        <Label x:Name="label" Content="{x:Static p:Resources.CopyRight}" Grid.Column="2" HorizontalAlignment="Left" Margin="0,517,0,-6" Grid.Row="1" VerticalAlignment="Top" Width="412" Height="30" Foreground="White"/>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="17*" />
            <ColumnDefinition Width="331*"/>
        </Grid.ColumnDefinitions>


        <!-- <Rectangle Name="rect" Width="100" VerticalAlignment="Stretch" Fill="#99000000" Visibility="Collapsed" /> -->

    </Grid>
</Window>